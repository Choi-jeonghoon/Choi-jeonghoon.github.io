{"componentChunkName":"component---src-templates-post-tsx","path":"/nextAuth2/","result":{"data":{"contentfulPost":{"title":"NextAuth.js 사용방법2","category":["웹 개발","React.js"],"date":"2024-08-12","slug":"nextAuth2","thumbnail":{"url":"https://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png?w=250&h=104&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png?w=500&h=207&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png?w=1000&h=414&q=50&fm=webp 1000w","sizes":"(min-width: 1000px) 1000px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png?w=1000&h=414&q=50&fm=png","srcSet":"https://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png?w=250&h=104&q=50&fm=png 250w,\nhttps://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png?w=500&h=207&q=50&fm=png 500w,\nhttps://images.ctfassets.net/v4l4nvur12dk/StOcIEnrgGTLrkENJnSQk/4601c890e1a1af14857b79e671f122eb/___________2024-08-06______11.14.17.png?w=1000&h=414&q=50&fm=png 1000w","sizes":"(min-width: 1000px) 1000px, 100vw"}},"layout":"constrained","backgroundColor":"#181828","width":1000,"height":414}},"description":{"description":"NextAuth 를 활용한 소셜 로그인 또는 일반로그인 기능을 구현하는 방법2"},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"시작\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\n저번에 이어서 Auth.js를 활용한 소셜 로그인 기능(카카오)에 대해서 알아보겠습니다.\\n파일 구조, 환경, 코드는 거의 동일합니다!!!\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"개발 환경은 다음과 같습니다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\" \\\"react\\\": \\\"^18\\\",\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\\"bcryptjs\\\": \\\"^2.4.3\\\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\\"next\\\": \\\"14.2.4\\\"    \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\\"next-auth\\\": \\\"^5.0.0-beta.19\\\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\\"firebase\\\": \\\"^10.12.2\\\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"버전 관련 설명:\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"해당 기능은 개발 당시 베타 버전에서 작업하였으며, 설치 및 개발 과정도 베타 버전을 기반으로 진행되었습니다. 현재는 해당 기능이 정식 버전으로 출시된 상태입니다. 최신 버전을 참고하여 개발하거나 적용할 때는 정식 버전의 문서와 가이드를 참조하시기 바랍니다.😅\\n\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"파일구조\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"1Nqvz5GZwOL8TL4fknkacH\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\ncode\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\n지난번 코드와 동일하니 불필요한 설명은 제외하겠습니다. 순서와 설명을 모르신다면 NextAuth.js 사용방법 (첫번째 )글을 확인해주세요!!\\n일단 api파일 경로를 따라가 만들어준 route.ts를 파일을 만들어주고 아래 코드를 작성해준다.\\n\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::typescript\\nimport {handlers} from \\\"@/auth\\\";\\n\\nexport const { GET, POST } = handlers;\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"다음 으로해야되는건 루트 경로에 auth.ts 파일을 만들어 아래 코드를 작성해준다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::typescript\\n// NextAuth, 인증 공급자, Firebase 및 기타 필요한 모듈을 가져옵니다.\\nimport NextAuth from \\\"next-auth\\\";\\nimport KakaoProvider from \\\"next-auth/providers/kakao\\\";//카카오 provider\\nimport { authConfig } from \\\"./auth.config\\\"; // 인증 구성 설정 가져오기\\n\\n// NextAuth 설정을 초기화하고 필요한 인증 설정을 제공합니다.\\nexport const { auth, signIn, signOut, handlers } = NextAuth({\\n  ...authConfig, // 추가 인증 설정 가져오기\\n  providers: [\\n    //Kakao 제공자 설정\\n    KakaoProvider({\\n      clientId: process.env.KAKAO_CLIENT_ID as string,\\n      clientSecret: process.env.KAKAO_CLIENT_SECRET as string,\\n    }),\\n  ],\\n  secret: process.env.AUTH_SECRET, // 인증에 사용할 비밀 키 설정\\n});\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"위 코드전에 당연히 카카오개발자에 가서 key를 받고 설정을 해야겠지만 해당 부분 필자보다 더 자세하게 설명을 해주신 분들이 많기 때문에 스킵하겠습니다!!(구글에 검색만 하면 친절하게 사진까지 보여주면서 설명이되어있기때문에 해당 부분은 넘어가겠습니다...!!)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"auth.config.ts 파일을 만들어주자 당연 위 구조에 나와야있는 루트경로에 만들어준다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"code2\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::typescript\\nimport type { NextAuthConfig } from \\\"next-auth\\\";\\nimport * as jose from \\\"jose\\\";\\nimport { firestore } from \\\"./firebase/firebaseConfig\\\";\\nimport {addDoc,collection,doc,getDoc,getDocs,query,setDoc,where,} from \\\"firebase/firestore\\\";\\nimport jwt from \\\"jsonwebtoken\\\";\\n\\nconst secret = process.env.SECRET_KEY as string;\\nexport const authConfig = {\\n  pages: {\\n    signIn: \\\"/login\\\",\\n  },\\n  callbacks: {\\n    authorized({ auth, request: { nextUrl } }) {\\n      const isLoggedIn = !!auth?.user;\\n      const isOnUsers = nextUrl.pathname.startsWith(\\\"/\\\");\\n      if (isOnUsers) {\\n        if (isLoggedIn) return true;\\n        // );\\n        return \\\"/login\\\"; // 인증되지 않은 사용자는 로그인 페이지로 리디렉션\\n      } else if (isLoggedIn) {\\n        // );\\n        return \\\"/home\\\"; // 인증된 사용자는 홈 페이지로 리디렉션\\n      }\\n      return true;\\n    },\\n    async signIn({ user, account }: { user: any; account: any }) {\\n      if (\\n        account?.provider === \\\"kakao\\\" ||\\n        account?.provider === \\\"google\\\" ||\\n        account?.provider === \\\"naver\\\"\\n      ) {\\n        const { id, name, email, birthdate, image } = user;\\n        console.log(\\n          `[signIn callback] ${account.provider.toUpperCase()} 사용자 정보:`,\\n          user\\n        );\\n        const userDocRef = collection(firestore, \\\"users\\\");\\n        //console.log(\\\"[signIn callback] Firestore의 users 컬렉션에 접근합니다.\\\");\\n        const q = query(userDocRef, where(\\\"email\\\", \\\"==\\\", email));\\n        const querySnapshot = await getDocs(q);\\n        if (querySnapshot.empty) {\\n          // console.log(\\n          //   \\\"[signIn callback] 새로운 사용자를 /socialSign으로 리디렉션합니다\\\"\\n          // );\\n          // JWT 토큰 생성\\n          const token = jwt.sign(\\n            { id, name, email, birthdate, image, provider: account.provider\\n},\\nsecret,\\n            {\\n              expiresIn: \\\"30m\\\",\\n            }\\n          );\\n          //console.log(\\\"=================\\\", token);\\n// 리디렉션 경로에 JWT 토큰 추가\\n          return `/api/cookie?token=${token}`;\\n        }\\n        const userDoc = querySnapshot.docs[0];\\n        // console.log(\\n        //   \\\"[signIn callback] Firestore에 사용자 문서가 이미 존재합니다:\\\",\\n        //   userDoc.data()\\n        // );\\n // 이미 존재하는 사용자의 경우 데이터베이스에서 가져온 정보를 사용자 객체에 설정\\n        user.id = userDoc.id;\\n      }\\n      if (user.id) {\\n        const secret = new TextEncoder().encode(process.env.SECRET_KEY);\\n        const alg = \\\"HS256\\\";\\n        const accessToken = await new jose.SignJWT({})\\n          .setProtectedHeader({ alg })\\n          .setExpirationTime(\\\"72h\\\")\\n          .setSubject(user.id.toString())\\n          .sign(secret);\\n        const refreshToken = await new jose.SignJWT({})\\n          .setProtectedHeader({ alg })\\n          .setExpirationTime(\\\"30d\\\")\\n          .setSubject(user.id.toString())\\n          .sign(secret);\\n        user.accessToken = accessToken;\\n        user.refreshToken = refreshToken;\\n      }\\n      //console.log(\\\"[signIn callback] JWT 토큰 생성 후 사용자 정보:\\\", user);\\n      return true;\\n    },\\n    async jwt({ token, user }: { token: any; user: any }) {\\n      //console.log(\\\"[jwt callback] JWT 토큰 생성 - 사용자 정보:\\\", user);\\n      if (user) {\\n        token.id = user.id;\\n        token.nickname = user.nickname;\\n        token.accessToken = user.accessToken;\\n        token.refreshToken = user.refreshToken;\\n      }\\n      //console.log(\\\"[jwt callback] 생성된 JWT 토큰:\\\", token);\\n      return token;\\n    },\\n    async session({ session, token }: { session: any; token: any }) {\\n      //console.log(\\\"[session callback] 호출됨\\\");\\n      //console.log(\\\"[session callback] 세션 생성 - JWT 토큰:\\\", token);\\n      if (token?.id) {\\n        session.user.id = token.id;\\n        session.user.nickname = token.nickname;\\n        session.user.accessToken = token.accessToken;\\n        session.user.refreshToken = token.refreshToken;\\n      }\\n      //console.log(\\\"[session callback] 생성된 세션:\\\", session);\\n      return session;\\n    },\\n  },\\n  providers: [],\\n} as NextAuthConfig;\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"위 코드를 보면 지난번 코드와 다를께 없다 해당 부분에 필요한 것은 sign 함수 부분이니 해당 코드를 콘솔로그로 보면서 어떻게 동작하는지 확인해보자!\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"아래는 간단한 카카오 로그인 버튼을 만들어본것이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"code3\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::typescript\\n\\\"use client\\\";\\nimport Image from \\\"next/image\\\";\\nimport { signIn } from \\\"next-auth/react\\\";\\n\\nexport default function LoginComponent() {\\n  const handleSocialLogin = async () => {\\n    try {\\n      await signIn(\\\"kakao\\\", { callbackUrl: \\\"/home\\\" });\\n      // signIn 함수는 인증이 성공하면 callbackUrl로 이동하므로, 홈 페이지로 리디렉션됨\\n    } catch (error) {\\n      console.error(\\\"소셜 로그인 에러:\\\", error);\\n      // 필요에 따라 에러 처리를 추가할 수 있음\\n    }\\n  };\\n  return (\\n    <>\\n      <section className=\\\"flex flex-col items-center justify-center py-0 px\\n5 box-border my-14\\\">\\n        <div className=\\\"\\\">\\n          <div className=\\\"flex flex-row items-center justify-center gap\\n[16px]\\\">\\n            <button onClick={handleSocialLogin} className=\\\"social-login\\nbutton\\\">\\n              <Image\\n                alt=\\\"Kakao\\\"\\n                src=\\\"/images/logo/Kakao.svg\\\"\\n                width={72}\\n                height={72}\\n              />\\n            </button>\\n          </div>\\n        </div>\\n      </section>\\n    </>\\n  );\\n}\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"위와 같이 코드들이 정리가 되었으면 이제 각각의 콘솔로그와 값이 어떻게 들어오고 정상적으로 동작하는지 봐보자!\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"결과물\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"\\n\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"6OV6fUJtTJHVydvKytACHd\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"5g8OARJB2Hw8AQYPdQX59L\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"ri4hEMl8WZdsRVOa02jAH\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\\n\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"소셜 로그인 기능 구현 완료\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"\\n\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"위와 같이 소셜 로그인 기능이 성공적으로 구현되었습니다. 로그인 후 쿠키도 정상적으로 설정되었으며, 원하는 페이지로의 리디렉션도 성공적으로 진행되었습니다.\\n여기까지 NextAuth를 활용한 로그인 , 소셜 기능을 구현해보았습니다. 긴 글을 읽어 주셔서 감사합니다. 도움이 되셨다면, 댓글 한 번 부탁드립니다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[{"contentful_id":"1Nqvz5GZwOL8TL4fknkacH","title":"스크린샷 2024-08-06 오후 11.16.51.png","description":"구조","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/v4l4nvur12dk/1Nqvz5GZwOL8TL4fknkacH/aa77644f5bd1a4cd4810fa8e6141cdba/___________2024-08-06______11.16.51.png?w=79&h=81&q=50&fm=webp 79w,\nhttps://images.ctfassets.net/v4l4nvur12dk/1Nqvz5GZwOL8TL4fknkacH/aa77644f5bd1a4cd4810fa8e6141cdba/___________2024-08-06______11.16.51.png?w=159&h=162&q=50&fm=webp 159w,\nhttps://images.ctfassets.net/v4l4nvur12dk/1Nqvz5GZwOL8TL4fknkacH/aa77644f5bd1a4cd4810fa8e6141cdba/___________2024-08-06______11.16.51.png?w=317&h=324&q=50&fm=webp 317w","sizes":"(min-width: 317px) 317px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/v4l4nvur12dk/1Nqvz5GZwOL8TL4fknkacH/aa77644f5bd1a4cd4810fa8e6141cdba/___________2024-08-06______11.16.51.png?w=317&h=324&q=50&fm=png","srcSet":"https://images.ctfassets.net/v4l4nvur12dk/1Nqvz5GZwOL8TL4fknkacH/aa77644f5bd1a4cd4810fa8e6141cdba/___________2024-08-06______11.16.51.png?w=79&h=81&q=50&fm=png 79w,\nhttps://images.ctfassets.net/v4l4nvur12dk/1Nqvz5GZwOL8TL4fknkacH/aa77644f5bd1a4cd4810fa8e6141cdba/___________2024-08-06______11.16.51.png?w=159&h=162&q=50&fm=png 159w,\nhttps://images.ctfassets.net/v4l4nvur12dk/1Nqvz5GZwOL8TL4fknkacH/aa77644f5bd1a4cd4810fa8e6141cdba/___________2024-08-06______11.16.51.png?w=317&h=324&q=50&fm=png 317w","sizes":"(min-width: 317px) 317px, 100vw"}},"layout":"constrained","backgroundColor":"#282828","width":774,"height":791},"__typename":"ContentfulAsset"},{"contentful_id":"6OV6fUJtTJHVydvKytACHd","title":"카카오버튼","description":"카카오버튼","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/v4l4nvur12dk/6OV6fUJtTJHVydvKytACHd/b1914329c7e7a2cf03cb3b64fe046bea/___________2024-08-12______8.28.04.png?w=192&h=92&q=50&fm=webp 192w,\nhttps://images.ctfassets.net/v4l4nvur12dk/6OV6fUJtTJHVydvKytACHd/b1914329c7e7a2cf03cb3b64fe046bea/___________2024-08-12______8.28.04.png?w=383&h=183&q=50&fm=webp 383w,\nhttps://images.ctfassets.net/v4l4nvur12dk/6OV6fUJtTJHVydvKytACHd/b1914329c7e7a2cf03cb3b64fe046bea/___________2024-08-12______8.28.04.png?w=766&h=366&q=50&fm=webp 766w","sizes":"(min-width: 766px) 766px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/v4l4nvur12dk/6OV6fUJtTJHVydvKytACHd/b1914329c7e7a2cf03cb3b64fe046bea/___________2024-08-12______8.28.04.png?w=766&h=366&q=50&fm=png","srcSet":"https://images.ctfassets.net/v4l4nvur12dk/6OV6fUJtTJHVydvKytACHd/b1914329c7e7a2cf03cb3b64fe046bea/___________2024-08-12______8.28.04.png?w=192&h=92&q=50&fm=png 192w,\nhttps://images.ctfassets.net/v4l4nvur12dk/6OV6fUJtTJHVydvKytACHd/b1914329c7e7a2cf03cb3b64fe046bea/___________2024-08-12______8.28.04.png?w=383&h=183&q=50&fm=png 383w,\nhttps://images.ctfassets.net/v4l4nvur12dk/6OV6fUJtTJHVydvKytACHd/b1914329c7e7a2cf03cb3b64fe046bea/___________2024-08-12______8.28.04.png?w=766&h=366&q=50&fm=png 766w","sizes":"(min-width: 766px) 766px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":370},"__typename":"ContentfulAsset"},{"contentful_id":"5g8OARJB2Hw8AQYPdQX59L","title":"콘솔로그","description":"카카오 로그","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/v4l4nvur12dk/5g8OARJB2Hw8AQYPdQX59L/b2a438b5790ce45f3b63fbefd6024084/___________2024-08-12______8.38.32.png?w=194&h=124&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/v4l4nvur12dk/5g8OARJB2Hw8AQYPdQX59L/b2a438b5790ce45f3b63fbefd6024084/___________2024-08-12______8.38.32.png?w=387&h=247&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/v4l4nvur12dk/5g8OARJB2Hw8AQYPdQX59L/b2a438b5790ce45f3b63fbefd6024084/___________2024-08-12______8.38.32.png?w=774&h=493&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/v4l4nvur12dk/5g8OARJB2Hw8AQYPdQX59L/b2a438b5790ce45f3b63fbefd6024084/___________2024-08-12______8.38.32.png?w=774&h=493&q=50&fm=png","srcSet":"https://images.ctfassets.net/v4l4nvur12dk/5g8OARJB2Hw8AQYPdQX59L/b2a438b5790ce45f3b63fbefd6024084/___________2024-08-12______8.38.32.png?w=194&h=124&q=50&fm=png 194w,\nhttps://images.ctfassets.net/v4l4nvur12dk/5g8OARJB2Hw8AQYPdQX59L/b2a438b5790ce45f3b63fbefd6024084/___________2024-08-12______8.38.32.png?w=387&h=247&q=50&fm=png 387w,\nhttps://images.ctfassets.net/v4l4nvur12dk/5g8OARJB2Hw8AQYPdQX59L/b2a438b5790ce45f3b63fbefd6024084/___________2024-08-12______8.38.32.png?w=774&h=493&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#181828","width":774,"height":493},"__typename":"ContentfulAsset"},{"contentful_id":"ri4hEMl8WZdsRVOa02jAH","title":"이동 사진","description":"이동사진","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/v4l4nvur12dk/ri4hEMl8WZdsRVOa02jAH/9b0f9781997541f80b088531b099c2f1/___________2024-08-12______8.46.04.png?w=87&h=14&q=50&fm=webp 87w,\nhttps://images.ctfassets.net/v4l4nvur12dk/ri4hEMl8WZdsRVOa02jAH/9b0f9781997541f80b088531b099c2f1/___________2024-08-12______8.46.04.png?w=173&h=27&q=50&fm=webp 173w,\nhttps://images.ctfassets.net/v4l4nvur12dk/ri4hEMl8WZdsRVOa02jAH/9b0f9781997541f80b088531b099c2f1/___________2024-08-12______8.46.04.png?w=346&h=54&q=50&fm=webp 346w","sizes":"(min-width: 346px) 346px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/v4l4nvur12dk/ri4hEMl8WZdsRVOa02jAH/9b0f9781997541f80b088531b099c2f1/___________2024-08-12______8.46.04.png?w=346&h=54&q=50&fm=png","srcSet":"https://images.ctfassets.net/v4l4nvur12dk/ri4hEMl8WZdsRVOa02jAH/9b0f9781997541f80b088531b099c2f1/___________2024-08-12______8.46.04.png?w=87&h=14&q=50&fm=png 87w,\nhttps://images.ctfassets.net/v4l4nvur12dk/ri4hEMl8WZdsRVOa02jAH/9b0f9781997541f80b088531b099c2f1/___________2024-08-12______8.46.04.png?w=173&h=27&q=50&fm=png 173w,\nhttps://images.ctfassets.net/v4l4nvur12dk/ri4hEMl8WZdsRVOa02jAH/9b0f9781997541f80b088531b099c2f1/___________2024-08-12______8.46.04.png?w=346&h=54&q=50&fm=png 346w","sizes":"(min-width: 346px) 346px, 100vw"}},"layout":"constrained","backgroundColor":"#182828","width":774,"height":121.00000000000001},"__typename":"ContentfulAsset"}]}}},"pageContext":{"slug":"nextAuth2"}},"staticQueryHashes":["408564090"],"slicesMap":{}}