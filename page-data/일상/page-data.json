{"componentChunkName":"component---src-templates-post-tsx","path":"/일상/","result":{"data":{"contentfulPost":{"title":"새로운 것에 도전해보는 시간","category":["도전"],"date":"2024-08-25","slug":"일상","thumbnail":{"url":"https://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=250&h=167&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=500&h=334&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=1000&h=667&q=50&fm=webp 1000w,\nhttps://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=2000&h=1334&q=50&fm=webp 2000w","sizes":"(min-width: 1000px) 1000px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=1000&h=667&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=250&h=167&fl=progressive&q=50&fm=jpg 250w,\nhttps://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=500&h=334&fl=progressive&q=50&fm=jpg 500w,\nhttps://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=1000&h=667&fl=progressive&q=50&fm=jpg 1000w,\nhttps://images.ctfassets.net/v4l4nvur12dk/77GWaoyfx41GrEhAsgUUhn/f4bb2f7e23fa78cd494f6d190bf36014/_______.jpg?w=2000&h=1334&fl=progressive&q=50&fm=jpg 2000w","sizes":"(min-width: 1000px) 1000px, 100vw"}},"layout":"constrained","backgroundColor":"#080808","width":1000,"height":667}},"description":{"description":"개발 공부 외에도 새로운 감각을 익히기 위해 3D 인터랙티브 웹 개발에 도전해 보았습니다. 새로운 기술을 통해 창의적인 웹 경험을 창출하고자 합니다."},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"3D인터랙티브 웹 개발에 도전해보자\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"최근에 새로운 도전을 하고 싶다는 생각이 들었다. 기존에 만들어왔던 웹사이트나 약간 변형을 준 프로젝트들, 백엔드 API를 구축하는 작업들은 이미 익숙해졌고, 그동안의 경험을 바탕으로 꽤 능숙하게 할 수 있게 되었다. 하지만 문득, 내가 한 번도 시도해보지 않았던 새로운 분야에 도전해보고 싶었다. 그러다가 인터넷을 돌아다니며 \\\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"3D 인터랙티브 웹 개발\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\\"이라는 것을 알게 되었다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"3D 인터랙티브 웹 개발\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이란, 말 그대로 3D 요소를 웹사이트에 통합하여 사용자가 웹사이트와 상호작용할 수 있는 경험을 만드는 것이다. 이런 웹사이트는 사용자에게 독특하고 몰입감 있는 경험을 제공할 수 있다. 예를 들어, 사용자가 마우스로 물체를 회전시키거나 클릭을 통해 애니메이션을 트리거할 수 있는 웹사이트들이 이에 해당한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"나는 특히 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Three.js\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"와 React에 최적화된 R3F(React Three Fiber)에 대해 배우기 시작했다. Three.js는 웹에서 3D 그래픽을 구현하는 데 사용되는 가장 인기 있는 JavaScript 라이브러리 중 하나이다. Three.js를 사용하면 브라우저에서 3D 애니메이션, 물리적 시뮬레이션, 복잡한 조명 효과 등을 쉽게 구현할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"R3F(React Three Fiber)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"는 React로 Three.js를 쉽게 사용할 수 있게 해주는 라이브러리다. R3F를 사용하면 React 컴포넌트처럼 Three.js 객체를 사용할 수 있다. 즉, 익숙한 React의 패턴과 문법을 사용하여 3D 그래픽을 쉽게 다룰 수 있다는 장점이 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"처음에는 3D라는 개념 자체가 낯설어서 다소 어려움을 겪었다. 그래픽 프로그래밍, 벡터 수학, 3D 좌표계 등 이해해야 할 개념들이 너무 많았다. 하지만 작은 목표들을 세우고 하나씩 해결해 나가기로 결심했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"첫 번째 목표는\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 간단한 3D 박스를 화면에 렌더링하는 것\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이었다. 이를 위해 Three.js의 기본 구성 요소인 BoxGeometry, MeshBasicMaterial 등을 사용하여 3D 박스를 만들고, R3F의 <Canvas> 컴포넌트를 사용하여 화면에 그려보았다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"R3F\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"를 사용하면서 알게 된 한 가지 흥미로운 점은, 기본적으로 제공되는 3D 객체 컴포넌트 (<Box>, <Sphere>, <Plane> 등)와 재질(Material)을 조합하여 코드를 매우 간결하게 작성할 수 있다는 것이다. 예를 들어, 아래와 같은 코드는 기본적으로 meshBasicMaterial을 사용하는 간단한 3D 박스를 생성한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기본 3D 박스 렌더링하기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::typescript\\nimport { Canvas } from \\\"@react-three/fiber\\\";\\nimport { BoxGeometry } from \\\"three\\\"; \\n\\nexport const BoxGeometry = () => {\\n return (\\n  <Canvas>\\n   <mesh>\\n    <boxGeometry args={[1, 1, 1]} />\\n    <meshBasicMaterial color={0xff0000} />\\n   </mesh>\\n  </Canvas>\\n );\\n};\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"위와같이 직접 사용하여 3D 박스를 생성할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"R3F의 Box 컴포넌트 사용하기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::typescript\\nimport { Box } from \\\"@react-three/drei\\\";\\n\\nexport const MyFirstBox = () => {\\n return (\\n  <Canvas>\\n   <Box args={[1, 1, 1]} position={[0, 0.5, 0]} material-color={0xff0000}>\\n {/* 기본적으로 meshBasicMaterial이 적용되지만, 다른 Material을 사용하고 싶다면 아래처럼 추가할 수 있다. */}\\n    <meshStandardMaterial />\\n   </Box>\\n </Canvas>\\n );\\n};\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Box 컴포넌트를 사용하여 3D박스를 더 간결하게 생성할수 있는 방법도 있다.!!\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"결론\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이제는 더욱 복잡한3D 모델을 불러오고, 텍스처를 입히고, 물리 효과를 적용하는 등 고급 기술들과 공식 문서에서 제공하는 다양한 예시와 인자값을 참고하여 여러 가지를 직접 구현해보면서, 내가 만든 3D 인터랙티브 요소들이 어떻게 동작하는지 이해해나가고있다. 이 과정중 막히는 부분도 많았고 앞으로도 있겠지만, 하나하나 문제를 해결해 나가는 과정이 개발의 또다른 재미라고 생각한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"조금더 익숙해진다면 날씨API를 활용하여 실시간 날씨 정보를 기반으로 지도를 그리는 프로젝트를 구상하고 있다. 예를 들어, 사용자가 특정 지역을 선택하면 해당 지역의 현재 날씨에 따라 3D 모델의 텍스처나 조명을 동적으로 변경하는 방식으로, 사용자에게 몰입감 있는 시각적 경험을 제공할수 있다는 기대감을 가지고 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[]}}},"pageContext":{"slug":"일상"}},"staticQueryHashes":["408564090"],"slicesMap":{}}