{"version":3,"file":"component---src-pages-index-tsx-3386c7a0367efd2bd8bc.js","mappings":"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","sources":["webpack://dev_apple/./src/components/main/Intro.tsx","webpack://dev_apple/./src/components/main/Catagory.tsx","webpack://dev_apple/./src/components/main/PostItem.tsx","webpack://dev_apple/./src/components/main/PostList.tsx","webpack://dev_apple/./src/hooks/useScroll.tsx","webpack://dev_apple/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { AiFillGithub, AiFillMail } from 'react-icons/ai'\n\nexport default function Intro() {\n  return (\n    <>\n      <Container>\n        <ProfileImage>\n          <StaticImage src=\"../../images/JH_0.jpeg\" alt=\"Profile Image\" />\n        </ProfileImage>\n        <Menu>\n          <SubText></SubText>\n          <MainText>I&apos;m Junior Developer Jeong-Hoon</MainText>\n          <LinksContainer>\n            <StyledLink\n              href=\"https://github.com/Choi-jeonghoon\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <AiFillGithub />\n              GitHub\n            </StyledLink>\n            <StyledLink\n              href=\"mailto:devjeongssi94@gmail.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <AiFillMail />\n              Mail\n            </StyledLink>\n            <StyledLink\n              href=\"https://github.com/Choi-jeonghoon/Choi-jeonghoon.github.io\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <AiFillGithub />\n              Blog_GitHub\n            </StyledLink>\n          </LinksContainer>\n        </Menu>\n      </Container>\n    </>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 30px;\n  flex-wrap: wrap;\n\n  @media (max-width: 768px) {\n    flex-wrap: nowrap;\n    gap: 10px;\n  }\n`\n\nconst ProfileImage = styled.div`\n  overflow: hidden;\n  width: 140px;\n  height: 140px;\n  margin-bottom: 20px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`\n\nconst SubText = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  margin-bottom: 0px;\n\n  @media (max-width: 1024px) {\n    font-size: 14px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 10px;\n    text-align: center;\n  }\n`\n\nconst MainText = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 10px;\n\n  @media (max-width: 1024px) {\n    font-size: 24px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n    text-align: center;\n    margin-bottom: 0px;\n  }\n`\n\nconst Menu = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media (max-width: 768px) {\n    font-size: 18px;\n    align-items: center;\n  }\n`\n\nconst LinksContainer = styled.div`\n  display: flex;\n  gap: 15px;\n\n  @media (max-width: 768px) {\n    gap: 10px;\n    justify-content: center;\n    flex-wrap: wrap;\n    width: 230px;\n  }\n`\n\nconst StyledLink = styled.a`\n  display: flex;\n  align-items: center;\n  gap: 1px;\n  padding: 10px 15px;\n\n  font-weight: 500;\n  color: white;\n  background-color: #555;\n  border-radius: 5px;\n  text-decoration: none;\n  transition: background-color 0.3s, transform 0.2s;\n\n  &:hover {\n    background-color: #777;\n    transform: scale(1.05);\n  }\n\n  &:active {\n    background-color: #444;\n  }\n\n  & > svg {\n    font-size: 20px;\n    color: white;\n  }\n  @media (max-width: 768px) {\n    padding: 2px 7px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { TCategoryProps } from '../../types/CategoryType'\n\nexport default function Category({\n  categories,\n  selectedCategory,\n  handleSelect,\n}: TCategoryProps) {\n  return (\n    <Wrapper>\n      {Object.entries(categories).map(([category, count]) => (\n        <Item\n          onClick={() => handleSelect(category)}\n          $selected={category === selectedCategory}\n          key={category}\n        >\n          #{category}({count})\n        </Item>\n      ))}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px 20px;\n  margin-top: 80px;\n\n  @media (max-width: 1024px) {\n    gap: 5px 15px;\n  }\n\n  @media (max-width: 768px) {\n    gap: 5px 10px;\n  }\n`\n\nconst Item = styled.div<{ $selected: boolean }>`\n  font-size: 16px;\n  font-weight: ${({ $selected }) => ($selected ? 600 : 300)};\n  cursor: ${({ $selected }) => ($selected ? 'default' : 'pointer')};\n\n  @media (max-width: 1024px) {\n    font-size: 14px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\nimport { TPostItemProps } from '../../types/PostItemType'\n\nexport default function PostItem({\n  title,\n  date,\n  category,\n  thumbnail,\n  description,\n  slug,\n}: TPostItemProps) {\n  return (\n    <Wrapper to={slug as string}>\n      <Thumbnail>\n        <GatsbyImage\n          image={thumbnail}\n          alt={title as string}\n          style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n        />\n      </Thumbnail>\n\n      <Contents>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {category?.map(category => (\n            <div key={category}>#{category}</div>\n          ))}\n        </Category>\n        <Description>{description}</Description>\n      </Contents>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  width: 320px;\n  border: 1px solid Darkgray;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n  text-decoration: none;\n  color: inherit;\n\n  @media (max-width: 1024px) {\n    width: calc(50% - 10px);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.7);\n  }\n`\n\nconst Thumbnail = styled.div`\n  display: grid;\n  place-items: center;\n  overflow: hidden;\n  height: 200px;\n  border-bottom: 1px solid black;\n`\n\nconst Contents = styled.div`\n  padding: 15px;\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  max-height: 2.4em;\n  font-size: 18px;\n  font-weight: 700;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  line-height: 1.2em;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst Date = styled.div`\n  margin-top: 10px;\n  font-size: 12px;\n  font-weight: 200;\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0 5px;\n  margin-top: 10px;\n  font-size: 12px;\n`\n\nconst Description = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  width: 100%;\n  max-height: 3.6em;\n  margin-top: 15px;\n  font-size: 12px;\n  font-weight: 300;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  line-height: 1.2em;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport PostItem from './PostItem'\nimport { TPostListProps } from '../../types/PostListType'\nimport { useScroll } from '../../hooks/useScroll'\n\nexport default function PostList({ posts }: TPostListProps) {\n  const itemsPerPage = 10\n\n  // useScroll 훅을 사용하여 스크롤과 데이터 로드를 처리\n  //  posts =>  readonly 배열을 mutable로 변환\n  const { displayItems, loading } = useScroll(\n    posts as Array<(typeof posts)[number]>,\n    itemsPerPage,\n  )\n\n  return (\n    <Wrapper>\n      {displayItems.map(\n        ({ title, date, category, thumbnail, description, slug }) => (\n          <PostItem\n            title={title as string}\n            date={date as string}\n            category={category as string[]}\n            thumbnail={thumbnail?.gatsbyImageData as IGatsbyImageData}\n            description={description?.description as string}\n            slug={slug as string}\n            key={slug}\n          />\n        ),\n      )}\n      {loading && <LoadingIndicator>Loading...</LoadingIndicator>}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-top: 40px;\n  width: 100%;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  }\n`\n\nconst LoadingIndicator = styled.div`\n  grid-column: span 2;\n  text-align: center;\n  padding: 20px;\n  font-size: 18px;\n  color: #333;\n`\n","// hooks/useScroll.ts\nimport { useState, useEffect, useCallback } from 'react'\n\n// 커스텀 훅: useScroll\n// 이 훅은 스크롤을 통해 페이지네이션을 관리하며, 데이터를 무한 스크롤 방식으로 로드하는 기능을 제공합니다.\nexport function useScroll<T>(items: T[], itemsPerPage: number) {\n  // 현재 페이지에 표시할 항목을 저장합니다.\n  const [displayItems, setDisplayItems] = useState<T[]>(\n    items.slice(0, itemsPerPage), // 초기 로드 시 첫 페이지 항목만 표시\n  )\n\n  // 로딩 상태를 관리합니다. 로딩 중에는 추가 데이터를 요청하지 않습니다.\n  const [loading, setLoading] = useState(false)\n\n  // 현재 페이지 번호를 저장합니다.\n  const [page, setPage] = useState(1)\n\n  // 포스트를 추가로 로드하는 함수\n  const loadMoreItems = useCallback(() => {\n    // 로딩 중이면 추가 로드 작업을 하지 않습니다.\n    if (loading) return\n\n    // 스크롤이 페이지 하단에 가까워지면 추가 데이터를 로드합니다.\n    if (\n      window.innerHeight + window.scrollY >=\n      document.body.offsetHeight - 500 // 스크롤이 페이지 하단에서 500px 이내에 있을 때\n    ) {\n      const nextPage = page + 1 // 다음 페이지 번호 계산\n      // 다음 페이지에 데이터가 있으면 로드합니다.\n      if (items.length > nextPage * itemsPerPage) {\n        setLoading(true) // 로딩 상태를 true로 설정\n        const newItems = items.slice(\n          nextPage * itemsPerPage, // 다음 페이지의 시작 인덱스\n          (nextPage + 1) * itemsPerPage, // 다음 페이지의 끝 인덱스\n        )\n        // 기존 항목에 새 항목을 추가합니다.\n        setDisplayItems(prev => [...prev, ...newItems])\n        setPage(nextPage) // 페이지 번호 업데이트\n        setLoading(false) // 로딩 상태를 false로 설정\n      }\n    }\n  }, [loading, page, items, itemsPerPage]) // 로딩, 페이지, 아이템, 페이지당 아이템 수가 변경될 때마다 재계산\n\n  // items 또는 itemsPerPage가 변경될 때 호출됩니다.\n  useEffect(() => {\n    // 초기 데이터 설정: 처음 로드 시 첫 페이지의 데이터만 표시합니다.\n    setDisplayItems(items.slice(0, itemsPerPage))\n    setPage(1) // 페이지를 1로 초기화: 새로운 데이터가 로드될 때 항상 페이지 1부터 시작\n  }, [items, itemsPerPage]) // items와 itemsPerPage가 변경될 때마다 호출\n\n  // 스크롤 이벤트를 감지하여 추가 데이터를 로드합니다.\n  useEffect(() => {\n    window.addEventListener('scroll', loadMoreItems)\n    // 컴포넌트가 언마운트되거나 의존성이 변경될 때 이벤트 리스너를 제거합니다.\n    return () => {\n      window.removeEventListener('scroll', loadMoreItems)\n    }\n  }, [loadMoreItems]) // loadMoreItems이 변경될 때마다 이벤트 리스너를 업데이트\n\n  return { displayItems, loading, setDisplayItems }\n}\n","import React, { useState } from 'react'\nimport { HeadFC, PageProps, graphql } from 'gatsby'\nimport Intro from '../components/main/Intro'\nimport Category from '../components/main/Catagory'\nimport PostList from '../components/main/PostList'\nimport SEO from '../components/common/Seo'\n\nexport default function Index({\n  data: {\n    allContentfulPost: { nodes },\n  },\n}: PageProps<Queries.IndexPageQuery>) {\n  const [selectedCategory, setSelectedCategory] = useState<string>('All')\n\n  const categories = nodes.reduce<Record<string, number>>(\n    (categories, post) => {\n      post.category\n        ?.filter((category): category is string => !!category)\n        .forEach(\n          category => (categories[category] = (categories[category] ?? 0) + 1),\n        )\n\n      return categories\n    },\n    { All: nodes.length },\n  )\n\n  const posts = nodes.filter(\n    ({ category }) =>\n      selectedCategory === 'All' || category?.includes(selectedCategory),\n  )\n\n  const handleSelectCategory = (category: string) =>\n    setSelectedCategory(category)\n\n  return (\n    <>\n      <Intro />\n      <Category\n        categories={categories}\n        selectedCategory={selectedCategory}\n        handleSelect={handleSelectCategory}\n      />\n      <PostList posts={posts} />\n    </>\n  )\n}\n\nexport const Head: HeadFC = () => <SEO />\n\nexport const query = graphql`\n  query IndexPage {\n    allContentfulPost(sort: { date: DESC }) {\n      nodes {\n        title\n        category\n        slug\n        date\n        thumbnail {\n          gatsbyImageData(width: 500)\n        }\n        description {\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Intro","_jsx","_Fragment","children","_jsxs","Container","ProfileImage","StaticImage","src","alt","__imageData","require","Menu","SubText","MainText","LinksContainer","StyledLink","href","target","rel","AiFillGithub","AiFillMail","styled","div","withConfig","displayName","componentId","a","Category","_ref","categories","selectedCategory","handleSelect","Wrapper","Object","entries","map","_ref2","category","count","Item","onClick","$selected","_ref3","_ref4","PostItem","title","date","thumbnail","description","slug","to","Thumbnail","GatsbyImage","image","style","width","height","objectFit","Contents","Title","Date","Description","Link","PostList","posts","displayItems","loading","items","itemsPerPage","setDisplayItems","useState","slice","setLoading","page","setPage","loadMoreItems","useCallback","window","innerHeight","scrollY","document","body","offsetHeight","nextPage","length","newItems","prev","concat","_toConsumableArray","useEffect","addEventListener","removeEventListener","useScroll","gatsbyImageData","LoadingIndicator","Index","data","allContentfulPost","nodes","setSelectedCategory","reduce","post","_post$category","filter","forEach","_categories$category","All","includes","Head","SEO"],"sourceRoot":""}